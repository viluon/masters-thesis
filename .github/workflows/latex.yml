name: LaTeX

on: push

jobs:
  pdfLaTeX:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/viluon/masters-thesis:slim
    steps:
    - name: test node
      run: |
        echo "looking for a usable node in /__e/node"
        for f in /__e/node*/bin/node; do
            echo "testing: $f --version";
            $f --version || echo "does not work, exit status: $?"
            ldd $f || echo "could not ldd, $?"
        done
        echo "analysing built-in node"
        node --version || echo "does not work, exit status: $?"
        ldd node || echo "could not ldd, $?"

    - name: checkout
      uses: actions/checkout@v3

    - name: install dependencies
      run: |
        apt-get update
        apt-get install -y python3 zip bzip2 wget

    - name: zip up the sources
      run: |
        zip -9 -Z bzip2 -r -x '.git/*' @ .github/workflows/payload .

    - name: restore cache
      uses: actions/cache/restore@v3
      id: cache-restore
      with:
        path: |
          **/_minted-*/
          **/*.acn
          **/*.aux
          **/*.bbl
          **/*.bcf
          **/*.blg
          **/*.dvi
          **/*.fdb_latexmk
          **/*.fls
          **/*.glo
          **/*.glsdefs
          **/*.ist
          **/*.lof
          **/*.log
          **/*.lol
          **/*.lot
          **/*.out
          **/*.pdf
          **/*.ps
          **/*.run.xml
          **/*.synctex.gz
          **/*.synctex(busy)
          **/*.tdo
          **/*.toc
          **/*.upa
        key: ${{ runner.os }}-tex-cache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-tex-cache-

    - name: compile
      run: |
        latexmk -pdf ctufit-thesis.tex
        makeglossaries ctufit-thesis
        latexmk -pdf ctufit-thesis.tex

    - name: save cache
      uses: actions/cache/save@v3
      with:
        path: |
          **/_minted-*/
          **/*.acn
          **/*.aux
          **/*.bbl
          **/*.bcf
          **/*.blg
          **/*.dvi
          **/*.fdb_latexmk
          **/*.fls
          **/*.glo
          **/*.glsdefs
          **/*.ist
          **/*.lof
          **/*.log
          **/*.lol
          **/*.lot
          **/*.out
          **/*.pdf
          **/*.ps
          **/*.run.xml
          **/*.synctex.gz
          **/*.synctex(busy)
          **/*.tdo
          **/*.toc
          **/*.upa
        key: ${{ steps.cache-restore.outputs.cache-primary-key }}

    - name: turn into a polyglot
      run: |
        git clone --recursive --depth 1 --branch lua-script-hack https://github.com/viluon/truepolyglot.git
        truepolyglot/truepolyglot pdfzip \
          --pdffile ctufit-thesis.pdf \
          --luafile .github/workflows/payload.lua \
          --zipfile .github/workflows/payload.zip \
          ./poly.pdf
        chmod +x poly.pdf
        wget https://www.nayuki.io/res/forcing-a-files-crc-to-any-value/forcecrc32.py
        python3 forcecrc32.py poly.pdf 241 cafebabe

    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pdfs
        path: '*.pdf'

    - name: release
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        # GitHub secret token
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        # Git tag (for automatic releases)
        automatic_release_tag: latest
        # Should this release be marked as a draft?
        prerelease: false
        # Release title (for automatic releases)
        title: thesis preview
        # Assets to upload to the release
        files: |
          ctufit-thesis.pdf
          poly.pdf
